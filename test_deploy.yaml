---
- hosts: localhost
  vars:
    ansible_connection: local
    ansible_python_interpreter: /usr/bin/python3

  tasks:

#     - name: deploy
#       get_url:
#         timeout: 1200
#         validate_certs: no
#         url: "{{baseUrl}}/deployer/deploy/{{id}}"
#         headers:
#           accept: "text/plain"
#         url_username: "{{ sdia_user }}"
#         url_password: "{{ sdia_password }}"
#         force_basic_auth: yes
#         force: yes
#         dest: /tmp/deploy_id



#     - lineinfile:
#         path: /tmp/deploy_id
#         line: '{"id":'
#         insertbefore: BOF

#     - lineinfile:
#         path: /tmp/deploy_id
#         line: '}'


#     - include_vars:
#         file: /tmp/deploy_id
#         name: deploy_id


#     - name: get deploy tosca
#       get_url:
#         timeout: 600
#         validate_certs: no
#         url: "{{baseUrl}}/tosca_template/{{deploy_id.id}}"
#         headers:
#           accept: "text/plain"
#         url_username: "{{ sdia_user }}"
#         url_password: "{{ sdia_password }}"
#         force_basic_auth: yes
#         force: yes
#         dest: /tmp/deployment.yaml


#     - include_vars:
#         file: /tmp/deployment.yaml
#         name: deployment
        
    - debug:
        var: item
      loop: "{{ topology_template['node_templates'] | dict2items }}"   
#       when: "'kubernetes' in topology_template['node_templates']"
        
    - wait_for:
        host: "{{item | split('://')[1].split(':')[0]}}"
        port: "{{item | split('://')[1].split(':')[1]}}"
        state: started
      loop: "{{ deployment['topology_template']['node_templates']['kubernetes']['attributes']['service_urls'] }}"   
      when: "'kubernetes' in deployment['topology_template']['node_templates']"

    - set_stats:
        data: "{{ deployment }}"






